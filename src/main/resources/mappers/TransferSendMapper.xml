<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchong.dao.v3.TransferSendMapper">
  <resultMap id="BaseResultMap" type="com.chouchong.entity.v3.TransferSend">
    <constructor>
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="membership_card_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="send_money" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.chouchong.entity.v3.TransferSend">
    insert into transfer_send (id, user_id, membership_card_id,
      send_money, status, updated,
      created)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{membershipCardId,jdbcType=INTEGER},
      #{sendMoney,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, #{updated,jdbcType=TIMESTAMP},
      #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chouchong.entity.v3.TransferSend">
    insert into transfer_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="membershipCardId != null">
        membership_card_id,
      </if>
      <if test="sendMoney != null">
        send_money,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="membershipCardId != null">
        #{membershipCardId,jdbcType=INTEGER},
      </if>
      <if test="sendMoney != null">
        #{sendMoney,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
    <select id="selectBySearch" resultType="com.chouchong.service.v3.vo.TransferVo">
      select a.id,
       a.user_id,
       a.membership_card_id,
       a.send_money,
       a.status,
       a.created,
       b.nickname,
       b.phone,
       d.title,
       c.id as reId,
       c.user_id as reUserId,
       c.created as created1,
       e.nickname as reNickname,
       e.phone as rePhone
from transfer_send a
left join app_user b on a.user_id = b.id
left join transfer_send_detail c on a.id = c.transfer_send_id
left join membership_card d on a.membership_card_id = d.id
left join app_user e on c.user_id = e.id
      where d.status = 1
      and a.membership_card_id in
      <foreach collection="list" open="(" close=")" item="list" separator="," index="index">
        #{list}
      </foreach>
      <if test="nickname != null and nickname != ''">
        and b.nickname like concat('%',#{nickname},'%')
      </if>
      <if test="title != null and title != ''">
        and d.title like concat('%',#{title},'%')
      </if>
      <if test="status != null">
        and a.status = #{status}
      </if>
      <if test="startTime != null and endTime != null">
        and unix_timestamp(a.created) &gt;= #{startTime}
        and unix_timestamp(a.created) &lt; #{endTime}
      </if>
      order by a.created DESC
    </select>
</mapper>
