<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchong.dao.gift.themeItem.ThemeItemMapper">
  <resultMap id="BaseResultMap" type="com.chouchong.entity.gift.themeItem.ThemeItem">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="item_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="theme_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="sort" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Byte" jdbcType="TINYINT" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, item_id, theme_id, sort, status, created, updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from theme_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from theme_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chouchong.entity.gift.themeItem.ThemeItem">
    insert into theme_item (id, item_id, theme_id, 
      sort, status, created, 
      updated)
    values (#{id,jdbcType=INTEGER}, #{itemId,jdbcType=INTEGER}, #{themeId,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.chouchong.entity.gift.themeItem.ThemeItem">
    insert into theme_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="themeId != null">
        theme_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="themeId != null">
        #{themeId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chouchong.entity.gift.themeItem.ThemeItem">
    update theme_item
    <set>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="themeId != null">
        theme_id = #{themeId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chouchong.entity.gift.themeItem.ThemeItem">
    update theme_item
    set item_id = #{itemId,jdbcType=INTEGER},
      theme_id = #{themeId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--根据搜索条件查询商品列表-->
  <select id="selectBySearch" parameterType="java.util.Map" resultType="com.chouchong.service.gift.themeItem.vo.ThemeItemVo">
    SELECT
    a.theme_id as themeId, a.status as status,
    b.title as name, a.sort as sort,
    a.created as created, a.updated as updated,
    a.id as id, a.item_id as itemId, b.cover as cover
    FROM
    theme_item a LEFT JOIN item b ON a.item_id = b.id
    WHERE
    b.status != 3
    <if test="name != null and name != ''">
      AND b.title LIKE CONCAT(CONCAT('%', #{name}), '%')
    </if>
    <if test="status != null">
      AND a.status = #{status}
    </if>
    <if test="theme != null">
      AND a.theme_id = #{theme}
    </if>
    ORDER BY sort DESC, created DESC
  </select>

  <!--通过商品id和主题id获得主题商品-->
  <select id="selectByThemeIdAndItemId" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"></include>
    FROM
    theme_item
    WHERE
    theme_id = #{themeId} AND item_id = #{id}
  </select>

  <!--通过主题删除该主题下的主题商品-->
  <delete id="deleteByThemeId">
    DELETE
    FROM
    theme_item
    WHERE
    theme_id = #{id}
  </delete>
</mapper>