<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chouchong.dao.iwant.withdraw.WalletMapper">
  <resultMap id="BaseResultMap" type="com.chouchong.entity.iwant.withdraw.Wallet">
    <constructor>
      <idArg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="balance" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="total_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="consume_amount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="created" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="updated" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    user_id, balance, total_amount, consume_amount, created, updated
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from wallet
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chouchong.entity.iwant.withdraw.Wallet">
    insert into wallet (user_id, balance, total_amount, 
      consume_amount, created, updated
      )
    values (#{userId,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, #{totalAmount,jdbcType=DECIMAL}, 
      #{consumeAmount,jdbcType=DECIMAL}, now(), now()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.chouchong.entity.iwant.withdraw.Wallet">
    insert into wallet
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="totalAmount != null">
        total_amount,
      </if>
      <if test="consumeAmount != null">
        consume_amount,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="consumeAmount != null">
        #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chouchong.entity.iwant.withdraw.Wallet">
    update wallet
    <set>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="totalAmount != null">
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="consumeAmount != null">
        consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>

        updated = now(),

    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chouchong.entity.iwant.withdraw.Wallet">
    update wallet
    set balance = #{balance,jdbcType=DECIMAL},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      consume_amount = #{consumeAmount,jdbcType=DECIMAL},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>